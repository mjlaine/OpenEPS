#!/bin/bash
#
# Launch an EPS job.
#
#
# Authors: pirkka.ollinaho@fmi.fi
#          juha.lento@csc.fi

# Run options
#

NAME=test2
MODEL=oifs
HOST=puhti-fmi

# Read in command line args
#
export VERBOSE=1
RESTART="false"

for arg in "$@"
do
case $arg in
    -e|--exp)
	NAME="$2"
	shift # past arguments
	shift
	;;
    -m|--model)
	MODEL="$2"
	shift # past arguments
	shift
	;;
    -h|--host)
	HOST="$2"
	shift # past arguments
	shift
	;;
    -r|--restart)
	RESTART="true"
	shift # past empty argument
	;;
    -s|--silent)
	VERBOSE=0
	shift # past empty argument
	;;
    -dr|--dry-run)
	DRYRUN="true"
	shift # past empty argument
	;;
    --help)
	head '-n 21' README
	exit
	;;
    --kill)
	;;
    *)
            # unknown option
	;;
esac
done

# Import correct settings
#
source examples/${MODEL}/configs/exp.$NAME # Experiment specific settings
source examples/${MODEL}/configs/env.$HOST # Environment specific settings

# Broadcast general
#
printf '\n%s\n'   "OpenEPS `git tag | tail -n1`"
printf '\n%s'     "Running an ensemble of $((ENS+1))-members for ${MODEL}."
printf '\n%s\n\n' "Start date for ensemble is $SDATE and end date $EDATE"

# Check that all vital paths/executables exist
#
#source bin/util_test.bash

# Initialize
#
source bin/util_init.bash

if [ -z $DRYRUN ]; then
    # Launch bash/batch job
    #

    cd $WORK
    printf "\n3) Submitting job...\n"

    if [ ! -z $SEND_AS_SINGLEJOB ]; then
	sbatch main.bash
    else
	bash main.bash &
    fi

    printf "   ...done! Launcher closing...\n\n"
else
    printf "\n3) submit job from $WORK with sbatch main.bash\n\n"
fi

exit 1
